const { Driver, Team } = require("../db");

const getDrivers = async (req, res) => {
  try {
    const {
      team,
      origin,
      order, 
      orderType, 
      pageNumber = 1,
      age,
    } = req.query;

    const page = parseInt(pageNumber, 10);
    const limit = 10;
    const offset = (page - 1) * limit;

    const filters = {};
    if (team && team !== 'All') {
      filters['$Team.name$'] = team;
    }
    if (origin && origin !== 'All') {
      filters.isCreate = (origin === 'CREATED');
    }
    if (age) {
      const currentDate = new Date();
      const minDate = new Date(currentDate.setFullYear(currentDate.getFullYear() - age));
      const maxDate = new Date(minDate.getFullYear() + 1, minDate.getMonth(), minDate.getDate());
      filters.dob = { [Op.between]: [minDate, maxDate] };
    }

    const orderArray = [[orderType, order]];

    const drivers = await Driver.findAndCountAll({
      where: filters,
      include: [{ model: Team, attributes: [] }],
      order: orderArray,
      limit: limit,
      offset: offset,
      distinct: true,
    });

    const totalPages = Math.ceil(drivers.count / limit);

    return res.status(200).json({
      drivers: drivers.rows,
      totalDrivers: drivers.count,
      totalPages: totalPages
    });

  } catch (error) {
    console.log(error);
    return res.status(400).json({ message: "Internal server error" });
  }
};


module.exports = getDrivers;
